{"name":"Roolr","tagline":"A very simple and lightweight business rule engine","body":"Roolr\r\n=========\r\n\r\nRoolr is a very simple and lightweight business rule engine, with no dependencies, designed to be \r\neasily embedded in any application (mobile, web, desktop) which needs to enforce complex business \r\nrules.\r\n\r\nExample\r\n-------\r\n\r\nThe project's [test case](src/test/java/io/github/esarbanis/roolr/SchoolRulesTest) is of a real \r\nworld domain and can be used as a reference of its use.\r\n\r\nFor example, say you develop an application for a school and you want to make sure that only \r\nstudents of the correct age are enrolled. You can construct the following roolr engine.\r\n \r\n```java\r\nStringOutcome defaultOutcome = new StringOutcome(STUDENT_OK);\r\nList<Rule<String>> rules = new ArrayList<>();\r\nRule theStudentIsOfSchoolAgeRule = new Rule<>(group(\r\n                                                    when()\r\n                                                    .field(\"student.age\").is(LT).to(number(6.0))\r\n                                                    .or()\r\n                                                    .field(\"student.age\").is(GT).to(number(18.0)).ok()\r\n                                                    ).ok(),\r\n                                              new StringOutcome(NOT_IN_SCHOOL_AGE));\r\nrules.add(theStudentIsOfSchoolAgeRule);\r\nRoolr roolr = new Roolr<>(rules, defaultOutcome);\r\n```\r\n\r\nWhen a student of age 20 tries to enroll then roolr will decide a NOT_IN_SCHOOL_AGE outcome\r\n\r\n```java\r\nMap<String, Object> fieldValues = Student.with().age(20.0).thatsIt();\r\n\r\nassertEquals(NOT_IN_SCHOOL_AGE, roolr.decide(new SimpleEvaluationContext(fieldValues)).getOutput());\r\n```\r\n\r\nEvaluation Contexts\r\n-------------------\r\n\r\nRight now only `SimpleEvaluationContext` is provided by roolr, that takes field/value pairs as a `Map`.\r\n\r\nBut you can always use your own implementation of `EvaluationContext` interface.\r\n\r\nOutcomes\r\n--------\r\n\r\nRight now only `StringOutcome` is provided by roolr, that provides decisions in `String`.\r\n\r\nBut you can always use your own implementation of `Outcome` interface.","google":"UA-11189644-3","note":"Don't delete this file! It's used internally to help with page regeneration."}